fastlane_version "2.84.0"

default_platform :ios

ENV["WORKSPACE"] = "Banjo.xcworkspace"
ENV["UI_TEST_SCHEME"] = "BanjoUITests"
ENV["APPLE_ID_EMAIL"] = "parkesfjarrod@gmail.com"
ENV["APPLE_DEV_TEAM_ID"] = "3Y3M3A69VC"
ENV["BUNDLE_ID"] = "com.ParkesTwins.Banjo"
ENV["ITC_TEAM_ID"] = "963498"
ENV["MATCH_GIT_URL"] = "https://github.com/parkestwins/iOS-Certificates"
ENV["ITC_PROVIDER"] = "JarrodParkes1336547729"

platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
  end

  desc "Install dependencies"
  lane :bootstrap do
    bundle_install
    cocoapods(clean: true)
  end

  desc "Capture screenshots"
  lane :screens do
    capture_ios_screenshots(
      workspace: ENV["WORKSPACE"],
      scheme: ENV["UI_TEST_SCHEME"],
      devices: ["iPhone 6 Plus", "iPad Pro (12.9-inch)"],
      languages: ["en-US"],
      number_of_retries: 1,
      skip_helper_version_check: false,
      clean: true
    )
  end

  desc "Upload screenshots"
  lane :upscreens do
    deliver(
      skip_metadata: true,
      skip_app_version_update: true,
      skip_binary_upload: true,
      username: ENV["APPLE_ID_EMAIL"],
      app_identifier: ENV["BUNDLE_ID"],
      team_id: ENV["ITC_TEAM_ID"],
      overwrite_screenshots: true
    )
  end

  desc "Run tests"
  lane :test do
    cocoapods
    run_tests(
      workspace: "Banjo.xcworkspace",
      scheme: "Banjo",
      clean: false
    )
  end

  desc "Generate new certificates"
  lane :certs do
    # set readonly to true to fetch existing certificates and profiles
    # set readonly to false and force to true, if you need to generate new certs
    match(
      type: "development",
      git_url: ENV["MATCH_GIT_URL"],
      app_identifier: ENV["BUNDLE_ID"],
      username: ENV["APPLE_ID_EMAIL"],
      team_id: ENV["APPLE_DEV_TEAM_ID"],
      readonly: false,
      force: true
    )
    match(
      type: "adhoc",
      git_url: ENV["MATCH_GIT_URL"],
      app_identifier: ENV["BUNDLE_ID"],
      username: ENV["APPLE_ID_EMAIL"],
      team_id: ENV["APPLE_DEV_TEAM_ID"],
      readonly: false,
      force: true
    )
    match(
      type: "appstore",
      git_url: ENV["MATCH_GIT_URL"],
      app_identifier: ENV["BUNDLE_ID"],
      username: ENV["APPLE_ID_EMAIL"],
      team_id: ENV["APPLE_DEV_TEAM_ID"],
      readonly: false,
      force: true
    )
  end

  desc "Deploy test build using Crashlytics Beta"
  lane :beta do
    match(type: 'adhoc', readonly: true)

    gym(
      workspace: ENV["WORKSPACE"],
      scheme: "Banjo",
      export_method: "ad-hoc",
      export_options: {
        provisioningProfiles: {
          ENV["BUNDLE_ID"] => "match AdHoc #{ENV["BUNDLE_ID"]}"
        }
      }
    )

    crashlytics(
      api_token: "b987616e1a3e27c4bda7906d4c30b13800145ce8",
      build_secret: "dd6830628db07bc1ae61e1294b337f9b9926d2afe4b1d5c60d72496f8a88629d",
      groups: ['parkestwins'],
      notes: "Added screenshots to game detail view.",
      notifications: true
    )

    upload_symbols_to_crashlytics

    slack(message: "Uploaded new #{bundleID} build to Crashlytics Beta.")
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    match(
      type: 'appstore',
      git_url: ENV["MATCH_GIT_URL"],
      app_identifier: ENV["BUNDLE_ID"],
      username: ENV["APPLE_ID_EMAIL"],
      team_id: ENV["APPLE_DEV_TEAM_ID"],
      readonly: true
    )

    gym(
      workspace: ENV["WORKSPACE"],
      scheme: "Banjo",
      export_method: "app-store",
      export_options: {
        method: "app-store",
        provisioningProfiles: {
          ENV["BUNDLE_ID"] => "match AppStore #{ENV["BUNDLE_ID"]}"
        }
      }
    )

    deliver(
      username: ENV["APPLE_ID_EMAIL"],
      app_identifier: ENV["BUNDLE_ID"],
      team_id: ENV["ITC_TEAM_ID"],
      dev_portal_team_id: ENV["APPLE_DEV_TEAM_ID"],
      itc_provider: ENV["ITC_PROVIDER"],
      force: true,
      skip_screenshots: true
    )
  end
end
